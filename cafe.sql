DROP DATABASE IF EXISTS CAFE;
CREATE DATABASE CAFE;
USE CAFE;

DROP TABLE IF EXISTS EMPLOYEE;
CREATE TABLE EMPLOYEE
(
  employeeID INT AUTO_INCREMENT,
  name VARCHAR(50),
  position VARCHAR(50),
  salary FLOAT,
  PRIMARY KEY (employeeID)
);
ALTER TABLE EMPLOYEE AUTO_INCREMENT = 101;

DROP TABLE IF EXISTS SUPPLIER;
CREATE TABLE SUPPLIER
(
  name VARCHAR(50),
  type VARCHAR(50),
  cost FLOAT,
  stock INT,
  PRIMARY KEY (name),
  UNIQUE (type)
);

DROP TABLE IF EXISTS COFFEESELECTION;
CREATE TABLE COFFEESELECTION
(
  drink VARCHAR(50),
  size VARCHAR(50),
  type VARCHAR(50),
  roast VARCHAR(50),
  price FLOAT,
  stock INT,
  PRIMARY KEY (drink),
  UNIQUE (size),
  UNIQUE (price),
  FOREIGN KEY (type) REFERENCES SUPPLIER (type)
  ON UPDATE CASCADE
  ON DELETE SET NULL
);

DROP TABLE IF EXISTS CUSTOMER;
CREATE TABLE CUSTOMER
(
  name VARCHAR(50),
  favoriteDrink VARCHAR(50),
  size VARCHAR(50),
  PRIMARY KEY (name),
  FOREIGN KEY (favoriteDrink) REFERENCES COFFEESELECTION (drink),
  FOREIGN KEY (size) REFERENCES COFFEESELECTION (size)
);

DROP TABLE IF EXISTS TRANSACTION;
CREATE TABLE TRANSACTION
(
  transactionID INT,
  employeeID INT,
  customer VARCHAR(50),
  drinkOrder VARCHAR(50),
  total FLOAT,
  updatedAt TIMESTAMP,
  PRIMARY KEY (transactionID),
  FOREIGN KEY (employeeID) REFERENCES EMPLOYEE (employeeID)
  ON UPDATE CASCADE
  ON DELETE SET NULL,
  FOREIGN KEY (customer) REFERENCES CUSTOMER (name)
  ON UPDATE CASCADE
  ON DELETE SET NULL,
  FOREIGN KEY (drinkOrder) REFERENCES COFFEESELECTION (drink)
  ON UPDATE CASCADE
  ON DELETE SET NULL,
  FOREIGN KEY (total) REFERENCES COFFEESELECTION (price)
);
